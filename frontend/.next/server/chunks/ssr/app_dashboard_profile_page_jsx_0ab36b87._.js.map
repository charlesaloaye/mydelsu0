{"version":3,"sources":["turbopack:///[project]/app/dashboard/profile/page.jsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport AuthGuard from \"../../../components/AuthGuard\";\nimport Navbar from \"../../../components/Navbar\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport apiClient from \"../../../lib/api\";\n\nfunction ProfilePage() {\n  const { user, isAuthenticated } = useAuth();\n  const router = useRouter();\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [uploadType, setUploadType] = useState(\"\"); // 'profile' or 'studentId'\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Profile data state\n  const [profileData, setProfileData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone: \"\",\n    whatsapp: \"\",\n    dob: \"\",\n    matric_num: \"\",\n    student_id: \"\",\n    type: \"aspirant\",\n    role: \"user\",\n    user_status: \"current_student\",\n    referral_code: \"\",\n    referral_number: \"\",\n    referrer_id: null,\n    how_did_you_hear: \"\",\n    social_media: \"\",\n    is_verified: false,\n    profile_complete: 0,\n    balance: 0,\n    wallet_balance: 0,\n    picture: null,\n    avatar: null,\n    verification_status: \"not_submitted\",\n    verification_submitted_at: null,\n    student_id_image: null,\n    additional_documents: null,\n    created_at: \"\",\n    updated_at: \"\",\n    last_login_at: null,\n  });\n\n  const [editData, setEditData] = useState({ ...profileData });\n  const [passwordData, setPasswordData] = useState({\n    current_password: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n  });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      loadProfileData();\n      loadNotifications();\n    }\n  }, [isAuthenticated]);\n\n  const loadProfileData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await apiClient.getProfile();\n\n      if (response.success) {\n        setProfileData(response.data);\n        setEditData(response.data);\n      } else {\n        setError(\"Failed to load profile data\");\n      }\n    } catch (err) {\n      console.error(\"Error loading profile:\", err);\n      setError(\"Failed to load profile data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadNotifications = async () => {\n    try {\n      const [notificationsResponse, unreadResponse] = await Promise.all([\n        apiClient.getNotifications(),\n        apiClient.getUnreadCount(),\n      ]);\n\n      if (notificationsResponse.success) {\n        setNotifications(notificationsResponse.data || []);\n      }\n      if (unreadResponse.success) {\n        setUnreadCount(unreadResponse.data.unread_count || 0);\n      }\n    } catch (error) {\n      console.error(\"Error loading notifications:\", error);\n    }\n  };\n\n  const handleEditToggle = () => {\n    if (isEditing) {\n      // Reset edit data to current profile data\n      setEditData({ ...profileData });\n      setPasswordData({\n        current_password: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n      });\n    }\n    setIsEditing(!isEditing);\n    setError(null);\n    setSuccess(null);\n  };\n\n  const handleSaveProfile = async () => {\n    try {\n      setSaving(true);\n      setError(null);\n      setSuccess(null);\n\n      const updateData = {\n        first_name: editData.first_name,\n        last_name: editData.last_name,\n        email: editData.email,\n        phone: editData.phone,\n        whatsapp: editData.whatsapp,\n        dob: editData.dob,\n        matric_num: editData.matric_num,\n        student_id: editData.student_id,\n        type: editData.type,\n        user_status: editData.user_status,\n        how_did_you_hear: editData.how_did_you_hear,\n        social_media: editData.social_media,\n      };\n\n      // Add password data if provided\n      if (passwordData.password) {\n        updateData.current_password = passwordData.current_password;\n        updateData.password = passwordData.password;\n        updateData.password_confirmation = passwordData.password_confirmation;\n      }\n\n      const response = await apiClient.updateProfile(updateData);\n\n      if (response.success) {\n        setProfileData(response.data.user);\n        setEditData(response.data.user);\n        setIsEditing(false);\n        setSuccess(\"Profile updated successfully!\");\n        setPasswordData({\n          current_password: \"\",\n          password: \"\",\n          password_confirmation: \"\",\n        });\n      } else {\n        setError(response.message || \"Failed to update profile\");\n      }\n    } catch (err) {\n      console.error(\"Error updating profile:\", err);\n      setError(err.message || \"Failed to update profile\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setEditData({ ...editData, [field]: value });\n  };\n\n  const handlePasswordChange = (field, value) => {\n    setPasswordData({ ...passwordData, [field]: value });\n  };\n\n  const handleFileUpload = async (e, type) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Client-side validation\n    const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/gif\"];\n    const maxSize = 2 * 1024 * 1024; // 2MB in bytes\n\n    if (!allowedTypes.includes(file.type)) {\n      setError(\"Please select a valid image file (JPEG, PNG, JPG, or GIF)\");\n      return;\n    }\n\n    if (file.size > maxSize) {\n      setError(\"File size must be less than 2MB\");\n      return;\n    }\n\n    try {\n      setSaving(true);\n      setError(null);\n\n      const formData = new FormData();\n      formData.append(type === \"profile\" ? \"avatar\" : \"student_id_image\", file);\n\n      const response = await apiClient.request(\n        `/profile/${type === \"profile\" ? \"upload-avatar\" : \"verify\"}`,\n        {\n          method: \"POST\",\n          headers: {\n            // Don't set Content-Type, let browser set it with boundary\n          },\n          body: formData,\n        }\n      );\n\n      if (response.success) {\n        setSuccess(\n          `${\n            type === \"profile\" ? \"Avatar\" : \"Student ID\"\n          } uploaded successfully!`\n        );\n        await loadProfileData(); // Reload profile data\n      } else {\n        // Handle validation errors more specifically\n        if (response.errors) {\n          const errorMessages = Object.values(response.errors).flat();\n          setError(errorMessages.join(\", \"));\n        } else {\n          setError(response.message || `Failed to upload ${type}`);\n        }\n      }\n    } catch (err) {\n      console.error(`Error uploading ${type}:`, err);\n      // Provide more specific error messages\n      if (err.message.includes(\"Validation failed\")) {\n        setError(\n          \"Please check the file format and size. Supported formats: JPEG, PNG, JPG, GIF (max 2MB)\"\n        );\n      } else if (err.message.includes(\"422\")) {\n        setError(\n          \"Invalid file format or size. Please use JPEG, PNG, JPG, or GIF files under 2MB.\"\n        );\n      } else {\n        setError(`Failed to upload ${type}. Please try again.`);\n      }\n    } finally {\n      setSaving(false);\n      setShowUploadModal(false);\n    }\n  };\n\n  const getInitials = () => {\n    return `${profileData.first_name?.charAt(0) || \"\"}${\n      profileData.last_name?.charAt(0) || \"\"\n    }`.toUpperCase();\n  };\n\n  const getProfileCompletionColor = (percentage) => {\n    if (percentage >= 80) return \"bg-green-500\";\n    if (percentage >= 60) return \"bg-yellow-500\";\n    return \"bg-red-500\";\n  };\n\n  const getVerificationStatusColor = (status) => {\n    switch (status) {\n      case \"approved\":\n        return \"bg-green-100 text-green-800\";\n      case \"pending\":\n        return \"bg-yellow-100 text-yellow-800\";\n      case \"rejected\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const getVerificationStatusText = (status) => {\n    switch (status) {\n      case \"approved\":\n        return \"Verified\";\n      case \"pending\":\n        return \"Pending Review\";\n      case \"rejected\":\n        return \"Rejected\";\n      default:\n        return \"Not Submitted\";\n    }\n  };\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#488bbf]\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <Navbar\n        variant=\"dashboard\"\n        showNotifications={true}\n        notifications={notifications}\n        unreadCount={unreadCount}\n        onNotificationClick={() => setShowNotifications(!showNotifications)}\n        currentPath=\"/dashboard/profile\"\n      />\n\n      {/* Main Content */}\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        {/* Page Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Profile Settings\n              </h1>\n              <p className=\"text-gray-600 mt-2\">\n                Manage your personal information and account settings\n              </p>\n            </div>\n            <div className=\"flex gap-3\">\n              {isEditing ? (\n                <>\n                  <button\n                    onClick={handleEditToggle}\n                    className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleSaveProfile}\n                    disabled={saving}\n                    className=\"px-6 py-2 bg-[#488bbf] text-white rounded-lg hover:bg-[#3a7ba8] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {saving ? \"Saving...\" : \"Save Changes\"}\n                  </button>\n                </>\n              ) : (\n                <button\n                  onClick={handleEditToggle}\n                  className=\"px-6 py-2 bg-[#488bbf] text-white rounded-lg hover:bg-[#3a7ba8] transition-colors\"\n                >\n                  Edit Profile\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Success/Error Messages */}\n        {success && (\n          <div className=\"mb-6 bg-green-50 border border-green-200 rounded-lg p-4\">\n            <div className=\"flex\">\n              <svg\n                className=\"h-5 w-5 text-green-400\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-green-800\">{success}</p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex\">\n              <svg\n                className=\"h-5 w-5 text-red-400\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-red-800\">{error}</p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Profile Header Card */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <div className=\"text-center\">\n                {/* Profile Picture */}\n                <div className=\"relative inline-block mb-4\">\n                  {profileData.avatar ? (\n                    <img\n                      src={profileData.avatar}\n                      alt=\"Profile\"\n                      className=\"w-32 h-32 rounded-full object-cover border-4 border-white shadow-lg\"\n                    />\n                  ) : (\n                    <div\n                      className=\"w-32 h-32 rounded-full flex items-center justify-center text-4xl font-bold text-white shadow-lg\"\n                      style={{ backgroundColor: \"#488bbf\" }}\n                    >\n                      {getInitials()}\n                    </div>\n                  )}\n                  <button\n                    onClick={() => {\n                      setUploadType(\"profile\");\n                      setShowUploadModal(true);\n                    }}\n                    className=\"absolute bottom-0 right-0 w-10 h-10 rounded-full bg-white border-2 flex items-center justify-center shadow-lg hover:shadow-xl transition\"\n                    style={{ borderColor: \"#488bbf\" }}\n                  >\n                    <svg\n                      className=\"w-5 h-5\"\n                      style={{ color: \"#488bbf\" }}\n                      fill=\"currentColor\"\n                      viewBox=\"0 0 20 20\"\n                    >\n                      <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\n                    </svg>\n                  </button>\n                </div>\n\n                <h2 className=\"text-xl font-bold text-gray-900 mb-2\">\n                  {profileData.first_name} {profileData.last_name}\n                </h2>\n                <p className=\"text-gray-600 mb-1\">{profileData.email}</p>\n                {profileData.matric_num && (\n                  <p className=\"text-gray-600 mb-1\">{profileData.matric_num}</p>\n                )}\n                {profileData.student_id && (\n                  <p className=\"text-gray-600 mb-4\">\n                    ID: {profileData.student_id}\n                  </p>\n                )}\n                {!profileData.matric_num && !profileData.student_id && (\n                  <p className=\"text-gray-600 mb-4\">Student Information</p>\n                )}\n\n                {/* Verification Status */}\n                <div className=\"mb-4\">\n                  <span\n                    className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getVerificationStatusColor(\n                      profileData.verification_status\n                    )}`}\n                  >\n                    {profileData.is_verified\n                      ? \"✓ Verified\"\n                      : getVerificationStatusText(\n                          profileData.verification_status\n                        )}\n                  </span>\n                </div>\n\n                {/* Profile Completion */}\n                <div className=\"mb-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">\n                      Profile Completion\n                    </span>\n                    <span className=\"text-sm font-medium text-gray-900\">\n                      {profileData.profile_complete}%\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full transition-all duration-300 ${getProfileCompletionColor(\n                        profileData.profile_complete\n                      )}`}\n                      style={{ width: `${profileData.profile_complete}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* Wallet Balance */}\n                <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700\">\n                      Wallet Balance\n                    </span>\n                    <span className=\"text-lg font-bold text-[#488bbf]\">\n                      ₦{profileData.wallet_balance?.toLocaleString() || \"0.00\"}\n                    </span>\n                  </div>\n                </div>\n\n                {/* Member Since */}\n                <p className=\"text-sm text-gray-500\">\n                  Member since{\" \"}\n                  {new Date(profileData.created_at).toLocaleDateString(\n                    \"en-US\",\n                    { month: \"long\", year: \"numeric\" }\n                  )}\n                </p>\n              </div>\n            </div>\n\n            {/* Quick Actions */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mt-6\">\n              <h3 className=\"font-bold text-gray-900 mb-4\">Quick Actions</h3>\n              <div className=\"space-y-3\">\n                <button\n                  onClick={() => {\n                    setUploadType(\"studentId\");\n                    setShowUploadModal(true);\n                  }}\n                  className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors\"\n                >\n                  <div className=\"flex items-center\">\n                    <svg\n                      className=\"w-5 h-5 text-gray-400 mr-3\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                      />\n                    </svg>\n                    <div>\n                      <p className=\"font-medium text-gray-900\">\n                        Upload Student ID\n                      </p>\n                      <p className=\"text-sm text-gray-500\">\n                        Verify your student status\n                      </p>\n                    </div>\n                  </div>\n                </button>\n\n                <button\n                  onClick={() => router.push(\"/dashboard/wallet\")}\n                  className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors\"\n                >\n                  <div className=\"flex items-center\">\n                    <svg\n                      className=\"w-5 h-5 text-gray-400 mr-3\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"\n                      />\n                    </svg>\n                    <div>\n                      <p className=\"font-medium text-gray-900\">View Wallet</p>\n                      <p className=\"text-sm text-gray-500\">\n                        Check your balance and transactions\n                      </p>\n                    </div>\n                  </div>\n                </button>\n\n                <button\n                  onClick={() => router.push(\"/dashboard/referrals\")}\n                  className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors\"\n                >\n                  <div className=\"flex items-center\">\n                    <svg\n                      className=\"w-5 h-5 text-gray-400 mr-3\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n                      />\n                    </svg>\n                    <div>\n                      <p className=\"font-medium text-gray-900\">Referrals</p>\n                      <p className=\"text-sm text-gray-500\">\n                        Manage your referrals and earnings\n                      </p>\n                    </div>\n                  </div>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Profile Form */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <h3 className=\"font-bold text-gray-900 mb-6\">\n                Personal Information\n              </h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* First Name */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    First Name *\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={editData.first_name || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"first_name\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"Enter your first name\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.first_name || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Last Name */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Last Name *\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={editData.last_name || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"last_name\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"Enter your last name\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.last_name || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Email */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email Address *\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"email\"\n                      value={editData.email || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"email\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"Enter your email\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.email || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* WhatsApp */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    WhatsApp Number *\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"tel\"\n                      value={editData.whatsapp || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"whatsapp\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"Enter your WhatsApp number\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.whatsapp || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* User Status */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Student Status *\n                  </label>\n                  {isEditing ? (\n                    <select\n                      value={editData.user_status || \"current_student\"}\n                      onChange={(e) =>\n                        handleInputChange(\"user_status\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                    >\n                      <option value=\"aspirant\">Aspirant</option>\n                      <option value=\"current_student\">Current Student</option>\n                      <option value=\"alumni\">Alumni</option>\n                    </select>\n                  ) : (\n                    <p className=\"text-gray-900 py-2 capitalize\">\n                      {profileData.user_status?.replace(\"_\", \" \") ||\n                        \"Not specified\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Phone */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Phone Number\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"tel\"\n                      value={editData.phone || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"phone\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"Enter your phone number\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.phone || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Date of Birth */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Date of Birth\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"date\"\n                      value={editData.dob || \"\"}\n                      onChange={(e) => handleInputChange(\"dob\", e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.dob || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Matric Number */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Matric Number\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={editData.matric_num || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"matric_num\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"Enter your matric number\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.matric_num || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Student ID */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Student ID\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={editData.student_id || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"student_id\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"Enter your student ID\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.student_id || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Type */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Type\n                  </label>\n                  {isEditing ? (\n                    <select\n                      value={editData.type || \"aspirant\"}\n                      onChange={(e) =>\n                        handleInputChange(\"type\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                    >\n                      <option value=\"aspirant\">Aspirant</option>\n                      <option value=\"student\">Student</option>\n                      <option value=\"alumni\">Alumni</option>\n                    </select>\n                  ) : (\n                    <p className=\"text-gray-900 py-2 capitalize\">\n                      {profileData.type || \"Not specified\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* How did you hear about us */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    How did you hear about us?\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={editData.how_did_you_hear || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"how_did_you_hear\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"How did you hear about us?\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.how_did_you_hear || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Social Media */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Social Media\n                  </label>\n                  {isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={editData.social_media || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"social_media\", e.target.value)\n                      }\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                      placeholder=\"Your social media handle\"\n                    />\n                  ) : (\n                    <p className=\"text-gray-900 py-2\">\n                      {profileData.social_media || \"Not provided\"}\n                    </p>\n                  )}\n                </div>\n\n                {/* Referral Code */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Referral Code\n                  </label>\n                  <p className=\"text-gray-900 py-2 font-mono\">\n                    {profileData.referral_code || \"Not generated\"}\n                  </p>\n                </div>\n              </div>\n\n              {/* Password Section */}\n              {isEditing && (\n                <div className=\"mt-8 pt-6 border-t border-gray-200\">\n                  <h4 className=\"font-bold text-gray-900 mb-4\">\n                    Change Password\n                  </h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Current Password\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={passwordData.current_password}\n                        onChange={(e) =>\n                          handlePasswordChange(\n                            \"current_password\",\n                            e.target.value\n                          )\n                        }\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                        placeholder=\"Enter current password\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        New Password\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={passwordData.password}\n                        onChange={(e) =>\n                          handlePasswordChange(\"password\", e.target.value)\n                        }\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                        placeholder=\"Enter new password\"\n                      />\n                    </div>\n                    <div className=\"md:col-span-2\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Confirm New Password\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={passwordData.password_confirmation}\n                        onChange={(e) =>\n                          handlePasswordChange(\n                            \"password_confirmation\",\n                            e.target.value\n                          )\n                        }\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder-gray-700\"\n                        placeholder=\"Confirm new password\"\n                      />\n                    </div>\n                  </div>\n                  <p className=\"text-sm text-gray-500 mt-2\">\n                    Leave password fields empty if you don't want to change your\n                    password.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Upload Modal */}\n      {showUploadModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"font-bold text-gray-900 mb-4\">\n              {uploadType === \"profile\"\n                ? \"Upload Profile Picture\"\n                : \"Upload Student ID\"}\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              {uploadType === \"profile\"\n                ? \"Choose a clear profile picture for your account.\"\n                : \"Upload a clear image of your student ID for verification.\"}\n            </p>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={(e) => handleFileUpload(e, uploadType)}\n              className=\"w-full mb-4 p-2 border border-gray-300 rounded-lg\"\n            />\n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => setShowUploadModal(false)}\n                className=\"flex-1 px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function ProtectedProfilePage() {\n  return (\n    <AuthGuard requireAuth={true}>\n      <ProfilePage />\n    </AuthGuard>\n  );\n}\n"],"names":[],"mappings":"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"}