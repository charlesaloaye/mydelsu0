{"version":3,"sources":["turbopack:///[project]/app/auth/login/page.jsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport AuthGuard from \"../../../components/AuthGuard\";\nimport Navbar from \"../../../components/Navbar\";\nimport { useToast } from \"../../../contexts/ToastContext\";\n\nfunction LoginPage() {\n  const { login, loading } = useAuth();\n  const { showSuccess, showError } = useToast();\n  const router = useRouter();\n\n  const [formData, setFormData] = useState({\n    emailOrPhone: \"\",\n    password: \"\",\n    rememberMe: false,\n  });\n\n  const [errors, setErrors] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n    if (errors[name]) {\n      setErrors((prev) => ({ ...prev, [name]: \"\" }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.emailOrPhone.trim()) {\n      newErrors.emailOrPhone = \"Email or WhatsApp number is required\";\n    }\n    if (!formData.password) {\n      newErrors.password = \"Password is required\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    setIsSubmitting(true);\n    setErrors({});\n\n    try {\n      const result = await login({\n        email_or_phone: formData.emailOrPhone,\n        password: formData.password,\n        remember_me: formData.rememberMe,\n      });\n\n      if (result.success) {\n        router.push(\"/dashboard\");\n      } else {\n        setErrors({ general: result.message });\n      }\n    } catch (error) {\n      setErrors({\n        general: error.message || \"Login failed. Please try again.\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <Navbar variant=\"auth\" />\n\n      {/* Main Content */}\n      <div className=\"container mx-auto px-4 py-12 max-w-md\">\n        {/* Welcome Section */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-2\">\n            Welcome Back!\n          </h1>\n          <p className=\"text-gray-600\">\n            Sign in to access your myDelsu account\n          </p>\n        </div>\n\n        {/* Login Form */}\n        <div className=\"bg-white rounded-2xl shadow-sm p-6 md:p-8 border border-gray-200\">\n          <div className=\"space-y-6\">\n            {/* Email or Phone */}\n            <div>\n              <label\n                htmlFor=\"emailOrPhone\"\n                className=\"block text-sm font-semibold text-gray-900 mb-2\"\n              >\n                Email or WhatsApp Number <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                id=\"emailOrPhone\"\n                name=\"emailOrPhone\"\n                value={formData.emailOrPhone}\n                onChange={handleChange}\n                onKeyPress={handleKeyPress}\n                style={{ outline: \"none\" }}\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 transition bg-white placeholder:text-gray-600 placeholder:font-medium ${\n                  errors.emailOrPhone\n                    ? \"border-red-500 focus:ring-red-500\"\n                    : \"border-gray-300 focus:ring-[#488bbf]\"\n                }`}\n                placeholder=\"Enter your email or phone number\"\n              />\n              {errors.emailOrPhone && (\n                <p className=\"mt-1 text-sm text-red-500\">\n                  {errors.emailOrPhone}\n                </p>\n              )}\n            </div>\n\n            {/* Password */}\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-semibold text-gray-900 mb-2\"\n              >\n                Password <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  onKeyPress={handleKeyPress}\n                  style={{ outline: \"none\" }}\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 transition bg-white placeholder:text-gray-600 placeholder:font-medium ${\n                    errors.password\n                      ? \"border-red-500 focus:ring-red-500\"\n                      : \"border-gray-300 focus:ring-[#488bbf]\"\n                  }`}\n                  placeholder=\"Enter your password\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-4 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                >\n                  {showPassword ? (\n                    <svg\n                      className=\"w-5 h-5\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                      />\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                      />\n                    </svg>\n                  ) : (\n                    <svg\n                      className=\"w-5 h-5\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\n                      />\n                    </svg>\n                  )}\n                </button>\n              </div>\n              {errors.password && (\n                <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>\n              )}\n            </div>\n\n            {/* Remember Me & Forgot Password */}\n            <div className=\"flex items-center justify-between\">\n              <label className=\"flex items-center space-x-2 cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  name=\"rememberMe\"\n                  checked={formData.rememberMe}\n                  onChange={handleChange}\n                  style={{ accentColor: \"#488bbf\" }}\n                  className=\"w-4 h-4 border-gray-300 rounded\"\n                />\n                <span className=\"text-sm text-gray-700\">Remember me</span>\n              </label>\n              <a\n                href=\"#\"\n                style={{ color: \"#488bbf\" }}\n                className=\"text-sm font-medium hover:underline\"\n              >\n                Forgot password?\n              </a>\n            </div>\n\n            {/* Login Button */}\n            <button\n              onClick={handleSubmit}\n              style={{ backgroundColor: \"#488bbf\" }}\n              className=\"w-full text-white py-4 rounded-lg font-semibold hover:opacity-90 transition shadow-md hover:shadow-lg transform hover:-translate-y-0.5\"\n            >\n              Sign In\n            </button>\n\n            {/* Divider */}\n            <div className=\"relative my-6\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-4 bg-white text-gray-500\">\n                  Or continue with\n                </span>\n              </div>\n            </div>\n\n            {/* WhatsApp Quick Login */}\n            <a\n              href=\"https://wa.me/2348100879906?text=Hi%2C%20I%20need%20help%20logging%20into%20my%20myDelsu%20account.\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center justify-center space-x-3 w-full py-3 border-2 border-gray-300 rounded-lg font-medium text-gray-700 hover:bg-gray-50 transition\"\n            >\n              <svg\n                className=\"w-5 h-5 text-green-500\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.51 3.488\" />\n              </svg>\n              <span>Get help via WhatsApp</span>\n            </a>\n\n            {/* Sign Up Link */}\n            <p className=\"text-center text-sm text-gray-600\">\n              Don't have an account?{\" \"}\n              <a\n                href=\"#\"\n                style={{ color: \"#488bbf\" }}\n                className=\"hover:underline font-medium\"\n              >\n                Create one here\n              </a>\n            </p>\n          </div>\n        </div>\n\n        {/* Security Note */}\n        <div className=\"mt-6 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            🔒 Your information is secure and encrypted\n          </p>\n        </div>\n      </div>\n\n      <style>{`\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default function ProtectedLoginPage() {\n  return (\n    <AuthGuard requireAuth={false}>\n      <LoginPage />\n    </AuthGuard>\n  );\n}\n"],"names":[],"mappings":"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"}