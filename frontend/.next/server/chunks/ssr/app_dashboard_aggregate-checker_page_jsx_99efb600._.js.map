{"version":3,"sources":["turbopack:///[project]/app/dashboard/aggregate-checker/page.jsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport AuthGuard from \"../../../components/AuthGuard\";\nimport Navbar from \"../../../components/Navbar\";\nimport Link from \"next/link\";\n\nfunction AggregateCheckerPage() {\n  const { user, logout } = useAuth();\n\n  const [formData, setFormData] = useState({\n    jambScore: \"\",\n    olevelGrades: {\n      english: \"\",\n      mathematics: \"\",\n      physics: \"\",\n      chemistry: \"\",\n      biology: \"\",\n      economics: \"\",\n      government: \"\",\n      literature: \"\",\n      geography: \"\",\n      history: \"\",\n      commerce: \"\",\n      accounting: \"\",\n      crs: \"\",\n      irs: \"\",\n      agriculture: \"\",\n      technicalDrawing: \"\",\n      foodAndNutrition: \"\",\n      homeEconomics: \"\",\n      fineArt: \"\",\n      music: \"\",\n      french: \"\",\n      hausa: \"\",\n      igbo: \"\",\n      yoruba: \"\",\n    },\n    department: \"\",\n    faculty: \"\",\n    utmeSubjects: {\n      subject1: \"\",\n      subject2: \"\",\n      subject3: \"\",\n    },\n  });\n\n  const [results, setResults] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [hasCalculated, setHasCalculated] = useState(false);\n\n  const departments = {\n    \"Faculty of Engineering\": [\n      \"Computer Engineering\",\n      \"Electrical/Electronic Engineering\",\n      \"Mechanical Engineering\",\n      \"Civil Engineering\",\n      \"Chemical Engineering\",\n      \"Petroleum Engineering\",\n      \"Agricultural Engineering\",\n      \"Marine Engineering\",\n      \"Aerospace Engineering\",\n    ],\n    \"Faculty of Sciences\": [\n      \"Computer Science\",\n      \"Mathematics\",\n      \"Physics\",\n      \"Chemistry\",\n      \"Biology\",\n      \"Biochemistry\",\n      \"Microbiology\",\n      \"Geology\",\n      \"Statistics\",\n      \"Environmental Science\",\n    ],\n    \"Faculty of Agriculture\": [\n      \"Agricultural Economics\",\n      \"Agricultural Extension\",\n      \"Animal Science\",\n      \"Crop Science\",\n      \"Fisheries\",\n      \"Forestry\",\n      \"Soil Science\",\n      \"Food Science\",\n    ],\n    \"Faculty of Arts\": [\n      \"English Language\",\n      \"History\",\n      \"Philosophy\",\n      \"Religious Studies\",\n      \"Theatre Arts\",\n      \"Fine Arts\",\n      \"Music\",\n      \"French\",\n      \"Linguistics\",\n    ],\n    \"Faculty of Education\": [\n      \"Educational Administration\",\n      \"Guidance and Counseling\",\n      \"Educational Psychology\",\n      \"Curriculum Studies\",\n      \"Educational Technology\",\n      \"Adult Education\",\n    ],\n    \"Faculty of Social Sciences\": [\n      \"Economics\",\n      \"Political Science\",\n      \"Sociology\",\n      \"Psychology\",\n      \"Geography\",\n      \"International Relations\",\n      \"Public Administration\",\n      \"Mass Communication\",\n    ],\n    \"Faculty of Management Sciences\": [\n      \"Business Administration\",\n      \"Accounting\",\n      \"Banking and Finance\",\n      \"Marketing\",\n      \"Management\",\n      \"Insurance\",\n    ],\n    \"Faculty of Law\": [\"Law\"],\n    \"Faculty of Medicine\": [\n      \"Medicine and Surgery\",\n      \"Nursing\",\n      \"Pharmacy\",\n      \"Medical Laboratory Science\",\n      \"Radiography\",\n      \"Physiotherapy\",\n    ],\n  };\n\n  const gradePoints = {\n    A1: 8,\n    A2: 7,\n    A3: 6,\n    B2: 5,\n    B3: 4,\n    B4: 3,\n    B5: 2,\n    B6: 1,\n    C1: 0,\n    C2: 0,\n    C3: 0,\n    C4: 0,\n    C5: 0,\n    C6: 0,\n    D7: 0,\n    E8: 0,\n    F9: 0,\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    if (errors[name]) {\n      setErrors((prev) => ({ ...prev, [name]: \"\" }));\n    }\n  };\n\n  const handleOLevelChange = (subject, grade) => {\n    setFormData((prev) => ({\n      ...prev,\n      olevelGrades: {\n        ...prev.olevelGrades,\n        [subject]: grade,\n      },\n    }));\n  };\n\n  const handleUtmeSubjectChange = (subject, value) => {\n    setFormData((prev) => ({\n      ...prev,\n      utmeSubjects: {\n        ...prev.utmeSubjects,\n        [subject]: value,\n      },\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.jambScore) {\n      newErrors.jambScore = \"JAMB score is required\";\n    } else if (formData.jambScore < 0 || formData.jambScore > 400) {\n      newErrors.jambScore = \"JAMB score must be between 0 and 400\";\n    }\n\n    if (!formData.department) {\n      newErrors.department = \"Department is required\";\n    }\n\n    if (!formData.faculty) {\n      newErrors.faculty = \"Faculty is required\";\n    }\n\n    // Check if at least 5 O'Level subjects are selected\n    const selectedOLevelSubjects = Object.values(formData.olevelGrades).filter(\n      (grade) => grade !== \"\"\n    );\n    if (selectedOLevelSubjects.length < 5) {\n      newErrors.olevelGrades = \"At least 5 O'Level subjects are required\";\n    }\n\n    // Check if all UTME subjects are selected\n    const selectedUtmeSubjects = Object.values(formData.utmeSubjects).filter(\n      (subject) => subject !== \"\"\n    );\n    if (selectedUtmeSubjects.length < 3) {\n      newErrors.utmeSubjects = \"All 3 UTME subjects are required\";\n    }\n\n    return newErrors;\n  };\n\n  const calculateAggregate = () => {\n    const errors = validateForm();\n    if (Object.keys(errors).length > 0) {\n      setErrors(errors);\n      return;\n    }\n\n    // Calculate O'Level aggregate (best 5 subjects)\n    const olevelScores = Object.entries(formData.olevelGrades)\n      .filter(([_, grade]) => grade !== \"\")\n      .map(([_, grade]) => gradePoints[grade] || 0)\n      .sort((a, b) => b - a)\n      .slice(0, 5);\n\n    const olevelAggregate = olevelScores.reduce((sum, score) => sum + score, 0);\n\n    // Calculate UTME aggregate (JAMB score / 8)\n    const utmeAggregate = formData.jambScore / 8;\n\n    // Calculate total aggregate\n    const totalAggregate = olevelAggregate + utmeAggregate;\n\n    // Determine admission status based on department requirements\n    const departmentRequirements = getDepartmentRequirements(\n      formData.department\n    );\n    const isEligible =\n      totalAggregate >= departmentRequirements.minimumAggregate;\n\n    setResults({\n      olevelAggregate: olevelAggregate.toFixed(2),\n      utmeAggregate: utmeAggregate.toFixed(2),\n      totalAggregate: totalAggregate.toFixed(2),\n      isEligible,\n      departmentRequirements,\n      olevelScores,\n    });\n\n    setSuccessMessage(\"Aggregate calculated successfully!\");\n    setTimeout(() => setSuccessMessage(\"\"), 5000);\n    setHasCalculated(true);\n  };\n\n  const getDepartmentRequirements = (department) => {\n    const requirements = {\n      \"Computer Science\": {\n        minimumAggregate: 15,\n        description: \"High demand course\",\n      },\n      \"Medicine and Surgery\": {\n        minimumAggregate: 20,\n        description: \"Highly competitive\",\n      },\n      Law: { minimumAggregate: 18, description: \"Highly competitive\" },\n      Engineering: { minimumAggregate: 16, description: \"Technical course\" },\n      \"Business Administration\": {\n        minimumAggregate: 12,\n        description: \"Popular course\",\n      },\n      Economics: { minimumAggregate: 14, description: \"Social science\" },\n      Accounting: { minimumAggregate: 13, description: \"Professional course\" },\n      \"Mass Communication\": {\n        minimumAggregate: 12,\n        description: \"Media course\",\n      },\n      \"Political Science\": {\n        minimumAggregate: 11,\n        description: \"Social science\",\n      },\n      Sociology: { minimumAggregate: 10, description: \"Social science\" },\n    };\n\n    return (\n      requirements[department] || {\n        minimumAggregate: 12,\n        description: \"General requirement\",\n      }\n    );\n  };\n\n  const getGradeColor = (grade) => {\n    if ([\"A1\", \"A2\", \"A3\"].includes(grade))\n      return \"text-green-600 bg-green-100\";\n    if ([\"B2\", \"B3\", \"B4\", \"B5\", \"B6\"].includes(grade))\n      return \"text-blue-600 bg-blue-100\";\n    if ([\"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\"].includes(grade))\n      return \"text-yellow-600 bg-yellow-100\";\n    return \"text-red-600 bg-red-100\";\n  };\n\n  const getAggregateColor = (aggregate, minimum) => {\n    if (aggregate >= minimum) return \"text-green-600 bg-green-100\";\n    if (aggregate >= minimum - 2) return \"text-yellow-600 bg-yellow-100\";\n    return \"text-red-600 bg-red-100\";\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <Navbar\n        variant=\"dashboard\"\n        showNotifications={false}\n        notifications={[]}\n        unreadCount={0}\n        onNotificationClick={() => {}}\n        currentPath=\"/dashboard/aggregate-checker\"\n      />\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-8\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                Aggregate Checker\n              </h1>\n              <p className=\"text-gray-600\">\n                Check your aggregate scores and admission requirements for DELSU\n              </p>\n            </div>\n            <div className=\"mt-4 sm:mt-0\">\n              <button\n                onClick={calculateAggregate}\n                style={{ backgroundColor: \"#488bbf\" }}\n                className=\"text-white px-6 py-3 rounded-lg font-semibold hover:opacity-90 transition-opacity\"\n              >\n                Calculate Aggregate\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Success Message */}\n        {successMessage && (\n          <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6\">\n            {successMessage}\n          </div>\n        )}\n\n        {/* Error Message */}\n        {errors.general && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\">\n            {errors.general}\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Form Section */}\n          {!hasCalculated && (\n            <div className=\"space-y-6\">\n              {/* JAMB Score */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                  JAMB Score\n                </h3>\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                    Enter your JAMB score (0-400)\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"jambScore\"\n                    value={formData.jambScore}\n                    onChange={handleInputChange}\n                    min=\"0\"\n                    max=\"400\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder:text-gray-600 placeholder:font-medium text-gray-900 font-medium bg-white\"\n                    placeholder=\"Enter JAMB score\"\n                  />\n                  {errors.jambScore && (\n                    <p className=\"text-red-500 text-sm mt-1\">\n                      {errors.jambScore}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              {/* Faculty and Department */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                  Faculty & Department\n                </h3>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                      Faculty\n                    </label>\n                    <select\n                      name=\"faculty\"\n                      value={formData.faculty}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n                    >\n                      <option value=\"\">Select Faculty</option>\n                      {Object.keys(departments).map((faculty) => (\n                        <option key={faculty} value={faculty}>\n                          {faculty}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.faculty && (\n                      <p className=\"text-red-500 text-sm mt-1\">\n                        {errors.faculty}\n                      </p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                      Department\n                    </label>\n                    <select\n                      name=\"department\"\n                      value={formData.department}\n                      onChange={handleInputChange}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n                      disabled={!formData.faculty}\n                    >\n                      <option value=\"\">Select Department</option>\n                      {formData.faculty &&\n                        departments[formData.faculty]?.map((dept) => (\n                          <option key={dept} value={dept}>\n                            {dept}\n                          </option>\n                        ))}\n                    </select>\n                    {errors.department && (\n                      <p className=\"text-red-500 text-sm mt-1\">\n                        {errors.department}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* UTME Subjects */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                  UTME Subjects\n                </h3>\n                <div className=\"space-y-4\">\n                  {[\"subject1\", \"subject2\", \"subject3\"].map(\n                    (subject, index) => (\n                      <div key={subject}>\n                        <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                          Subject {index + 1}\n                        </label>\n                        <select\n                          value={formData.utmeSubjects[subject]}\n                          onChange={(e) =>\n                            handleUtmeSubjectChange(subject, e.target.value)\n                          }\n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n                        >\n                          <option value=\"\">Select Subject</option>\n                          <option value=\"Mathematics\">Mathematics</option>\n                          <option value=\"English\">English</option>\n                          <option value=\"Physics\">Physics</option>\n                          <option value=\"Chemistry\">Chemistry</option>\n                          <option value=\"Biology\">Biology</option>\n                          <option value=\"Economics\">Economics</option>\n                          <option value=\"Government\">Government</option>\n                          <option value=\"Literature\">Literature</option>\n                          <option value=\"Geography\">Geography</option>\n                          <option value=\"History\">History</option>\n                          <option value=\"Commerce\">Commerce</option>\n                          <option value=\"Accounting\">Accounting</option>\n                          <option value=\"CRS\">CRS</option>\n                          <option value=\"IRS\">IRS</option>\n                          <option value=\"French\">French</option>\n                        </select>\n                      </div>\n                    )\n                  )}\n                  {errors.utmeSubjects && (\n                    <p className=\"text-red-500 text-sm mt-1\">\n                      {errors.utmeSubjects}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              {/* O'Level Grades */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                  O'Level Grades\n                </h3>\n                <p className=\"text-sm text-gray-600 mb-4\">\n                  Select your best 5 subjects and their grades\n                </p>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {Object.entries(formData.olevelGrades).map(\n                    ([subject, grade]) => (\n                      <div\n                        key={subject}\n                        className=\"flex items-center space-x-2\"\n                      >\n                        <div className=\"flex-1\">\n                          <label className=\"block text-sm font-medium text-gray-700 capitalize\">\n                            {subject.replace(/([A-Z])/g, \" $1\").trim()}\n                          </label>\n                          <select\n                            value={grade}\n                            onChange={(e) =>\n                              handleOLevelChange(subject, e.target.value)\n                            }\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white text-sm\"\n                          >\n                            <option value=\"\">Select Grade</option>\n                            <option value=\"A1\">A1</option>\n                            <option value=\"A2\">A2</option>\n                            <option value=\"A3\">A3</option>\n                            <option value=\"B2\">B2</option>\n                            <option value=\"B3\">B3</option>\n                            <option value=\"B4\">B4</option>\n                            <option value=\"B5\">B5</option>\n                            <option value=\"B6\">B6</option>\n                            <option value=\"C1\">C1</option>\n                            <option value=\"C2\">C2</option>\n                            <option value=\"C3\">C3</option>\n                            <option value=\"C4\">C4</option>\n                            <option value=\"C5\">C5</option>\n                            <option value=\"C6\">C6</option>\n                            <option value=\"D7\">D7</option>\n                            <option value=\"E8\">E8</option>\n                            <option value=\"F9\">F9</option>\n                          </select>\n                        </div>\n                        {grade && (\n                          <span\n                            className={`px-2 py-1 rounded text-xs font-semibold ${getGradeColor(\n                              grade\n                            )}`}\n                          >\n                            {grade}\n                          </span>\n                        )}\n                      </div>\n                    )\n                  )}\n                </div>\n                {errors.olevelGrades && (\n                  <p className=\"text-red-500 text-sm mt-2\">\n                    {errors.olevelGrades}\n                  </p>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Results Section */}\n          <div className=\"space-y-6\">\n            {results && (\n              <>\n                {/* Actions */}\n                <div className=\"flex items-center justify-end\">\n                  <button\n                    onClick={() => {\n                      setResults(null);\n                      setHasCalculated(false);\n                    }}\n                    className=\"px-4 py-2 rounded-lg font-semibold text-gray-700 bg-gray-200 hover:bg-gray-300 transition-colors\"\n                  >\n                    Calculate Again\n                  </button>\n                </div>\n                {/* Aggregate Results */}\n                <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                    Aggregate Results\n                  </h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center p-4 bg-gray-50 rounded-lg\">\n                      <span className=\"font-medium text-gray-700\">\n                        O'Level Aggregate:\n                      </span>\n                      <span className=\"font-bold text-xl text-gray-900\">\n                        {results.olevelAggregate}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-4 bg-gray-50 rounded-lg\">\n                      <span className=\"font-medium text-gray-700\">\n                        UTME Aggregate:\n                      </span>\n                      <span className=\"font-bold text-xl text-gray-900\">\n                        {results.utmeAggregate}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-4 bg-blue-50 rounded-lg border-2 border-blue-200\">\n                      <span className=\"font-medium text-gray-700\">\n                        Total Aggregate:\n                      </span>\n                      <span className=\"font-bold text-xl text-blue-600\">\n                        {results.totalAggregate}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Admission Status */}\n                <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                    Admission Status\n                  </h3>\n                  <div className=\"text-center\">\n                    <div\n                      className={`inline-flex items-center px-6 py-3 rounded-lg text-lg font-bold ${\n                        results.isEligible\n                          ? \"text-green-600 bg-green-100\"\n                          : \"text-red-600 bg-red-100\"\n                      }`}\n                    >\n                      {results.isEligible ? \"✅ ELIGIBLE\" : \"❌ NOT ELIGIBLE\"}\n                    </div>\n                    <p className=\"mt-4 text-gray-600\">\n                      {results.isEligible\n                        ? `Congratulations! You meet the requirements for ${formData.department}`\n                        : `You need at least ${results.departmentRequirements.minimumAggregate} aggregate points for ${formData.department}`}\n                    </p>\n                    <p className=\"text-sm text-gray-500 mt-2\">\n                      {results.departmentRequirements.description}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Department Requirements */}\n                <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                    Department Requirements\n                  </h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Minimum Aggregate:</span>\n                      <span className=\"font-semibold\">\n                        {results.departmentRequirements.minimumAggregate}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Your Aggregate:</span>\n                      <span\n                        className={`font-semibold ${getAggregateColor(\n                          parseFloat(results.totalAggregate),\n                          results.departmentRequirements.minimumAggregate\n                        )}`}\n                      >\n                        {results.totalAggregate}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Difference:</span>\n                      <span\n                        className={`font-semibold ${\n                          parseFloat(results.totalAggregate) >=\n                          results.departmentRequirements.minimumAggregate\n                            ? \"text-green-600\"\n                            : \"text-red-600\"\n                        }`}\n                      >\n                        {parseFloat(results.totalAggregate) >=\n                        results.departmentRequirements.minimumAggregate\n                          ? `+${(\n                              parseFloat(results.totalAggregate) -\n                              results.departmentRequirements.minimumAggregate\n                            ).toFixed(2)}`\n                          : `${(\n                              parseFloat(results.totalAggregate) -\n                              results.departmentRequirements.minimumAggregate\n                            ).toFixed(2)}`}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* O'Level Breakdown */}\n                <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                    O'Level Breakdown\n                  </h3>\n                  <div className=\"space-y-2\">\n                    {Object.entries(formData.olevelGrades)\n                      .filter(([_, grade]) => grade !== \"\")\n                      .map(([subject, grade]) => (\n                        <div\n                          key={subject}\n                          className=\"flex justify-between items-center\"\n                        >\n                          <span className=\"text-gray-600 capitalize\">\n                            {subject.replace(/([A-Z])/g, \" $1\").trim()}\n                          </span>\n                          <div className=\"flex items-center space-x-2\">\n                            <span\n                              className={`px-2 py-1 rounded text-sm font-semibold ${getGradeColor(\n                                grade\n                              )}`}\n                            >\n                              {grade}\n                            </span>\n                            <span className=\"text-sm font-medium text-gray-500\">\n                              ({gradePoints[grade]} pts)\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {/* Instructions */}\n            {!results && (\n              <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                  How to Use\n                </h3>\n                <div className=\"space-y-3 text-sm text-gray-600\">\n                  <div className=\"flex items-start space-x-2\">\n                    <span className=\"text-blue-500 font-bold\">1.</span>\n                    <span>Enter your JAMB score (0-400)</span>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <span className=\"text-blue-500 font-bold\">2.</span>\n                    <span>Select your desired faculty and department</span>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <span className=\"text-blue-500 font-bold\">3.</span>\n                    <span>Choose your 3 UTME subjects</span>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <span className=\"text-blue-500 font-bold\">4.</span>\n                    <span>Select your best 5 O'Level subjects and grades</span>\n                  </div>\n                  <div className=\"flex items-start space-x-2\">\n                    <span className=\"text-blue-500 font-bold\">5.</span>\n                    <span>Click \"Calculate Aggregate\" to see your results</span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function ProtectedAggregateCheckerPage() {\n  return (\n    <AuthGuard requireAuth={true}>\n      <AggregateCheckerPage />\n    </AuthGuard>\n  );\n}\n"],"names":[],"mappings":"wDACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAGA,SAAS,YACP,GAAM,MAAE,CAAI,CAAE,QAAM,CAAE,CAAG,CAAA,EAAA,EAAA,OAAA,AAAO,IAE1B,CAAC,EAAU,EAAY,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,CACvC,UAAW,GACX,aAAc,CACZ,QAAS,GACT,YAAa,GACb,QAAS,GACT,UAAW,GACX,QAAS,GACT,UAAW,GACX,WAAY,GACZ,WAAY,GACZ,UAAW,GACX,QAAS,GACT,SAAU,GACV,WAAY,GACZ,IAAK,GACL,IAAK,GACL,YAAa,GACb,iBAAkB,GAClB,iBAAkB,GAClB,cAAe,GACf,QAAS,GACT,MAAO,GACP,OAAQ,GACR,MAAO,GACP,KAAM,GACN,OAAQ,EACV,EACA,WAAY,GACZ,QAAS,GACT,aAAc,CACZ,SAAU,GACV,SAAU,GACV,SAAU,EACZ,CACF,GAEM,CAAC,EAAS,EAAW,CAAG,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAS,MACjC,CAAC,EAAQ,EAAU,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,CAAC,GAChC,CAAC,EAAgB,EAAkB,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,IAC/C,CAAC,EAAe,EAAiB,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GAE7C,EAAc,CAClB,yBAA0B,CACxB,uBACA,oCACA,yBACA,oBACA,uBACA,wBACA,2BACA,qBACA,wBACD,CACD,sBAAuB,CACrB,mBACA,cACA,UACA,YACA,UACA,eACA,eACA,UACA,aACA,wBACD,CACD,yBAA0B,CACxB,yBACA,yBACA,iBACA,eACA,YACA,WACA,eACA,eACD,CACD,kBAAmB,CACjB,mBACA,UACA,aACA,oBACA,eACA,YACA,QACA,SACA,cACD,CACD,uBAAwB,CACtB,6BACA,0BACA,yBACA,qBACA,yBACA,kBACD,CACD,6BAA8B,CAC5B,YACA,oBACA,YACA,aACA,YACA,0BACA,wBACA,qBACD,CACD,iCAAkC,CAChC,0BACA,aACA,sBACA,YACA,aACA,YACD,CACD,iBAAkB,CAAC,MAAM,CACzB,sBAAuB,CACrB,uBACA,UACA,WACA,6BACA,cACA,gBACD,AACH,EAEM,EAAc,CAClB,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,CACN,EAEM,EAAoB,AAAC,IACzB,GAAM,MAAE,CAAI,OAAE,CAAK,CAAE,CAAG,EAAE,MAAM,CAChC,EAAY,AAAC,IAAU,CACrB,EADoB,CACjB,CAAI,CACP,CAAC,EAAK,CAAE,EACV,CAAC,EAEG,CAAM,CAAC,EAAK,EAAE,AAChB,EAAU,AAAC,IAAU,CAAE,EAAH,CAAM,CAAI,CAAE,CAAC,EAAK,CAAE,GAAG,CAAC,CAEhD,EA0IM,EAAgB,AAAC,GACrB,AAAI,CAAC,KAAM,KAAM,KAAK,CAAC,QAAQ,CAAC,GACvB,KAAP,yBACE,CAAC,KAAM,KAAM,KAAM,KAAM,KAAK,CAAC,QAAQ,CAAC,GACnC,KAAP,uBACE,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAK,CAAC,QAAQ,CAAC,GACzC,KAAP,2BACK,0BAST,MACE,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,oCAEb,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAM,CAAA,CACL,QAAQ,YACR,mBAAmB,EACnB,cAAe,EAAE,CACjB,YAAa,EACb,oBAAqB,KAAO,EAC5B,YAAY,iCAGd,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wDAEb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,mDACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,yEACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WACC,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,iDAAwC,sBAGtD,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,yBAAgB,wEAI/B,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,wBACb,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CACC,QA1Ha,CA0HJ,IAzHrB,MAAM,GApCA,EAAY,CAAC,EAEd,CAkCU,CAlCD,SAAS,EAAE,AAEd,EAAS,SAAS,CAAG,GAAK,EAAS,SAAS,CAAG,GAAA,GAAK,CAC7D,EAAU,SAAS,CAAG,sCAAA,EAFtB,EAAU,SAAS,CAAG,yBAKpB,AAAC,EAAS,UAAU,EAAE,CACxB,EAAU,UAAU,CAAG,wBAAA,EAGrB,AAAC,EAAS,OAAO,EAAE,CACrB,EAAU,OAAO,CAAG,qBAAA,EAIS,AAG3B,OAHkC,MAAM,CAAC,EAAS,YAAY,EAAE,MAAM,CACxE,AAAC,GAAoB,KAAV,GAEc,MAAM,CAAG,GAAG,CACrC,EAAU,YAAY,CAAG,0CAAA,EAIE,AAGzB,OAHgC,MAAM,CAAC,EAAS,YAAY,EAAE,MAAM,CACtE,AAAC,GAAY,AAAY,QAEF,MAAM,CAAG,GAAG,CACnC,EAAU,YAAY,CAAG,kCAAA,EAGpB,GAKP,GAAI,OAAO,IAAI,CAAC,GAAQ,MAAM,CAAG,EAAG,YAClC,EAAU,GAKZ,IAAM,EAAe,OAAO,OAAO,CAAC,EAAS,YAAY,EACtD,MAAM,CAAC,CAAC,CAAC,EAAG,EAAM,GAAK,AAAU,QACjC,GAAG,CAAC,CAAC,CAAC,EAAG,EAAM,GAAK,CAAW,CAAC,EAAM,EAAI,GAC1C,IAAI,CAAC,CAAC,EAAG,IAAM,EAAI,GACnB,KAAK,CAAC,EAAG,GAEN,EAAkB,EAAa,MAAM,CAAC,CAAC,EAAK,IAAU,EAAM,EAAO,GAGnE,EAAgB,EAAS,SAAS,CAAG,EAGrC,EAAiB,EAAkB,EAGnC,EAqBe,AA6BnB,CA5BA,mBAAoB,CAClB,EAvB2B,eAuBT,GAClB,YAAa,oBACf,EACA,uBAAwB,CACtB,iBAAkB,GAClB,YAAa,oBACf,EACA,IAAK,CAAE,iBAAkB,GAAI,YAAa,oBAAqB,EAC/D,YAAa,CAAE,iBAAkB,GAAI,YAAa,kBAAmB,EACrE,0BAA2B,CACzB,iBAAkB,GAClB,YAAa,gBACf,EACA,UAAW,CAAE,iBAAkB,GAAI,YAAa,gBAAiB,EACjE,WAAY,CAAE,iBAAkB,GAAI,YAAa,qBAAsB,EACvE,qBAAsB,CACpB,iBAAkB,GAClB,YAAa,cACf,EACA,oBAAqB,CACnB,iBAAkB,GAClB,YAAa,gBACf,EACA,UAAW,CAAE,iBAAkB,GAAI,YAAa,gBAAiB,CACnE,CAGc,CAAC,AAjDb,EAAS,UAAU,CAiDK,EAAI,CAC1B,iBAAkB,GAClB,YAAa,qBACf,EAlDI,EACJ,GAAkB,EAAuB,gBAAgB,CAE3D,EAAW,CACT,gBAAiB,EAAgB,OAAO,CAAC,GACzC,cAAe,EAAc,OAAO,CAAC,GACrC,eAAgB,EAAe,OAAO,CAAC,cACvC,yBACA,eACA,CACF,GAEA,EAAkB,sCAClB,WAAW,IAAM,EAAkB,IAAK,KACxC,GAAiB,EACnB,EAkFc,MAAO,CAAE,gBAAiB,SAAU,EACpC,UAAU,6FACX,+BAQN,GACC,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,sFACZ,IAKJ,EAAO,OAAO,EACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,gFACZ,EAAO,OAAO,GAInB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,kDAEZ,CAAC,GACA,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,sBAEb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,eAGrD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WACC,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CAAM,UAAU,0DAAiD,kCAGlE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CACC,KAAK,SACL,KAAK,YACL,MAAO,EAAS,SAAS,CACzB,SAAU,EACV,IAAI,IACJ,IAAI,MACJ,UAAU,qMACV,YAAY,qBAEb,EAAO,SAAS,EACf,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,qCACV,EAAO,SAAS,SAOzB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,yBAGrD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,sBACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WACC,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CAAM,UAAU,0DAAiD,YAGlE,CAAA,EAAA,EAAA,IAAA,EAAC,SAAA,CACC,KAAK,UACL,MAAO,EAAS,OAAO,CACvB,SAAU,EACV,UAAU,6JAEV,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,YAAG,mBAChB,OAAO,IAAI,CAAC,GAAa,GAAG,CAAE,AAAD,GAC5B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAqB,MAAO,WAC1B,GADU,OAKhB,EAAO,OAAO,EACb,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,qCACV,EAAO,OAAO,MAKrB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WACC,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CAAM,UAAU,0DAAiD,eAGlE,CAAA,EAAA,EAAA,IAAA,EAAC,SAAA,CACC,KAAK,aACL,MAAO,EAAS,UAAU,CAC1B,SAAU,EACV,UAAU,mJACV,SAAU,CAAC,EAAS,OAAO,WAE3B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,YAAG,sBAChB,EAAS,OAAO,EACf,CAAW,CAAC,EAAS,OAAO,CAAC,EAAE,IAAI,AAAC,GAClC,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAkB,MAAO,WACvB,GADU,OAKlB,EAAO,UAAU,EAChB,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,qCACV,EAAO,UAAU,YAQ5B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,kBAGrD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,sBACZ,CAAC,WAAY,WAAY,WAAW,CAAC,GAAG,CACvC,CAAC,EAAS,IACR,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WACC,CAAA,EAAA,EAAA,IAAA,EAAC,QAAA,CAAM,UAAU,2DAAiD,WACvD,EAAQ,KAEnB,CAAA,EAAA,EAAA,IAAA,EAAC,SAAA,CACC,MAAO,EAAS,YAAY,CAAC,EAAQ,CACrC,SAAU,AAAC,IACT,aAxSgB,EAwSiB,EAAE,MAAM,CAAC,KAAK,MAvSvE,EAAY,AAAC,IAAU,CACrB,EADoB,CACjB,CAAI,CACP,aAAc,CACZ,GAAG,EAAK,YAAY,CACpB,CAAC,AAmS2C,EAnSnC,CAAE,CACb,EACF,CAAC,GAmSqB,UAAU,6JAEV,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,YAAG,mBACjB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,uBAAc,gBAC5B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,mBAAU,YACxB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,mBAAU,YACxB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,qBAAY,cAC1B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,mBAAU,YACxB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,qBAAY,cAC1B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,sBAAa,eAC3B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,sBAAa,eAC3B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,qBAAY,cAC1B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,mBAAU,YACxB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,oBAAW,aACzB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,sBAAa,eAC3B,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,eAAM,QACpB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,eAAM,QACpB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,kBAAS,gBA1BjB,IA+Bb,EAAO,YAAY,EAClB,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,qCACV,EAAO,YAAY,SAO5B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,mBAGrD,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,sCAA6B,iDAG1C,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,iDACZ,OAAO,OAAO,CAAC,EAAS,YAAY,EAAE,GAAG,CACxC,CAAC,CAAC,EAAS,EAAM,GACf,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAEC,UAAU,wCAEV,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,mBACb,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CAAM,UAAU,8DACd,EAAQ,OAAO,CAAC,WAAY,OAAO,IAAI,KAE1C,CAAA,EAAA,EAAA,IAAA,EAAC,SAAA,CACC,MAAO,EACP,SAAU,AAAC,IACT,aAxWS,EAwWmB,EAAE,MAAM,CAAC,KAAK,MAvWpE,EAAY,AAAC,IAAU,CACrB,EADoB,CACjB,CAAI,CACP,aAAc,CACZ,GAAG,EAAK,YAAY,CACpB,CAAC,AAmWwC,EAnWhC,CAAE,CACb,CACF,CAAC,IAmWuB,UAAU,qKAEV,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,YAAG,iBACjB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,OACnB,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,MAAM,cAAK,aAGtB,GACC,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,UAAW,CAAC,wCAAwC,EAAE,EACpD,GAAA,CACC,UAEF,MAxCA,MA+CZ,EAAO,YAAY,EAClB,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,qCACV,EAAO,YAAY,SAQ9B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,sBACZ,GACC,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,CAAA,WAEE,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,yCACb,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CACC,QAAS,KACP,EAAW,MACX,GAAiB,EACnB,EACA,UAAU,4GACX,sBAKH,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,sBAGrD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,sBACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wEACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,qCAA4B,uBAG5C,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,2CACb,EAAQ,eAAe,MAG5B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wEACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,qCAA4B,oBAG5C,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,2CACb,EAAQ,aAAa,MAG1B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iGACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,qCAA4B,qBAG5C,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,2CACb,EAAQ,cAAc,YAO/B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,qBAGrD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wBACb,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,UAAW,CAAC,gEAAgE,EAC1E,EAAQ,UAAU,CACd,8BACA,0BAAA,CACJ,UAED,EAAQ,UAAU,CAAG,aAAe,mBAEvC,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,8BACV,EAAQ,UAAU,CACf,CAAC,+CAA+C,EAAE,EAAS,UAAU,CAAA,CAAE,CACvE,CAAC,kBAAkB,EAAE,EAAQ,sBAAsB,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,EAAS,UAAU,CAAA,CAAE,GAExH,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,sCACV,EAAQ,sBAAsB,CAAC,WAAW,SAMjD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,4BAGrD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,sBACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,yBAAgB,uBAChC,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,yBACb,EAAQ,sBAAsB,CAAC,gBAAgB,MAGpD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,yBAAgB,oBAChC,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,UAAW,CAAC,cAAc,EA7V1C,AA6V4C,CA9VvB,EA+VH,UA9VL,CA8VgB,EAAQ,MA9Vf,QA8V6B,KA/VnB,EAgWd,EAAQ,sBAAsB,CAAC,gBAAgB,EA/VpC,8BAC7B,GAAa,EAAU,EAAU,CAAP,+BACvB,0BA6V8D,CAC9C,UAEF,EAAQ,cAAc,MAG3B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,yBAAgB,gBAChC,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,UAAW,CAAC,cAAc,EACxB,WAAW,EAAQ,cAAc,GACjC,EAAQ,sBAAsB,CAAC,gBAAgB,CAC3C,iBACA,eAAA,CACJ,UAED,WAAW,EAAQ,cAAc,GAClC,EAAQ,sBAAsB,CAAC,gBAAgB,CAC3C,CAAC,CAAC,EAAE,CACF,WAAW,EAAQ,cAAc,EACjC,EAAQ,sBAAsB,CAAC,gBAAA,AACjC,EAAE,OAAO,CAAC,GAAA,CAAI,CACd,CAAA,EACE,AADC,YACU,EAAQ,cAAc,EACjC,EAAQ,sBAAsB,CAAC,gBAAA,AACjC,EAAE,OAAO,CAAC,GAAA,CAAI,YAO1B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,sBAGrD,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,qBACZ,OAAO,OAAO,CAAC,EAAS,YAAY,EAClC,MAAM,CAAC,CAAC,CAAC,EAAG,EAAM,GAAe,KAAV,GACvB,GAAG,CAAC,CAAC,CAAC,EAAS,EAAM,GACpB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAEC,UAAU,8CAEV,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,oCACb,EAAQ,OAAO,CAAC,WAAY,OAAO,IAAI,KAE1C,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,UAAW,CAAC,wCAAwC,EAAE,EACpD,GAAA,CACC,UAEF,IAEH,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,UAAU,8CAAoC,IAChD,CAAW,CAAC,EAAM,CAAC,gBAfpB,YA0BlB,CAAC,GACA,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,+CACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,gDAAuC,eAGrD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,4CACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,uCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,mCAA0B,OAC1C,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,UAAK,qCAER,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,uCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,mCAA0B,OAC1C,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,UAAK,kDAER,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,uCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,mCAA0B,OAC1C,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,UAAK,mCAER,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,uCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,mCAA0B,OAC1C,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,UAAK,sDAER,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,uCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,mCAA0B,OAC1C,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,UAAK,wEAU1B,CAEe,SAAS,IACtB,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAS,CAAA,CAAC,aAAa,WACtB,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAA,IAGP,CAhwBA,EAAA,CAAA,CAAA"}