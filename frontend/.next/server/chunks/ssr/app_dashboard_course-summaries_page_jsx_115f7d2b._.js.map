{"version":3,"sources":["turbopack:///[project]/app/dashboard/course-summaries/page.jsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport AuthGuard from \"../../../components/AuthGuard\";\nimport Navbar from \"../../../components/Navbar\";\nimport Link from \"next/link\";\nimport apiClient from \"../../../lib/api\";\n\nfunction CourseSummariesPage() {\n  const { user, logout } = useAuth();\n\n  const [activeTab, setActiveTab] = useState(\"notes\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\n  const [selectedLevel, setSelectedLevel] = useState(\"\");\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [uploadData, setUploadData] = useState({\n    title: \"\",\n    subject: \"\",\n    level: \"\",\n    type: \"notes\",\n    description: \"\",\n    file: null,\n  });\n\n  const subjects = [\n    \"Mathematics\",\n    \"Physics\",\n    \"Chemistry\",\n    \"Biology\",\n    \"English\",\n    \"Economics\",\n    \"Government\",\n    \"Literature\",\n    \"Geography\",\n    \"History\",\n    \"Commerce\",\n    \"Accounting\",\n    \"Computer Science\",\n    \"Agricultural Science\",\n    \"Technical Drawing\",\n    \"French\",\n  ];\n\n  const levels = [\n    \"100 Level\",\n    \"200 Level\",\n    \"300 Level\",\n    \"400 Level\",\n    \"500 Level\",\n  ];\n\n  // Load course summaries on component mount\n  useEffect(() => {\n    loadCourseSummaries();\n  }, [activeTab, selectedSubject, selectedLevel, searchQuery]);\n\n  const loadCourseSummaries = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      const params = {\n        type: activeTab,\n        ...(selectedSubject && { subject: selectedSubject }),\n        ...(selectedLevel && { level: selectedLevel }),\n        ...(searchQuery && { search: searchQuery }),\n      };\n\n      const response = await apiClient.getCourseSummaries(params);\n\n      if (response.success) {\n        setNotes(Array.isArray(response.data) ? response.data : []);\n      } else {\n        setError(response.message || \"Failed to load course summaries\");\n        // Fallback to empty array\n        setNotes([]);\n      }\n    } catch (error) {\n      console.error(\"Error loading course summaries:\", error);\n\n      // Check if it's a backend connection error\n      if (\n        error.message.includes(\"Server returned HTML instead of JSON\") ||\n        error.message.includes(\"Failed to fetch\")\n      ) {\n        setError(\n          \"Backend server is not running. Course summaries feature will be available once the backend is set up.\"\n        );\n        // Use sample data as fallback for development\n        setNotes(getSampleData());\n      } else {\n        setError(\"Failed to load course summaries. Please try again.\");\n        setNotes([]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Sample data fallback for when backend is not available\n  const getSampleData = () => {\n    return [\n      {\n        id: 1,\n        title: \"Calculus Fundamentals\",\n        subject: \"Mathematics\",\n        level: \"100 Level\",\n        type: \"notes\",\n        description:\n          \"Complete guide to differential and integral calculus with examples\",\n        author: \"Dr. John Smith\",\n        uploadDate: \"2024-01-15\",\n        downloads: 245,\n        rating: 4.8,\n        tags: [\"calculus\", \"derivatives\", \"integrals\", \"limits\"],\n        fileSize: \"2.3 MB\",\n        fileType: \"PDF\",\n      },\n      {\n        id: 2,\n        title: \"Organic Chemistry Reactions\",\n        subject: \"Chemistry\",\n        level: \"200 Level\",\n        type: \"notes\",\n        description:\n          \"Comprehensive overview of organic reactions and mechanisms\",\n        author: \"Prof. Sarah Johnson\",\n        uploadDate: \"2024-01-10\",\n        downloads: 189,\n        rating: 4.6,\n        tags: [\"organic chemistry\", \"reactions\", \"mechanisms\", \"synthesis\"],\n        fileSize: \"3.1 MB\",\n        fileType: \"PDF\",\n      },\n      {\n        id: 3,\n        title: \"Physics Laws and Formulas\",\n        subject: \"Physics\",\n        level: \"100 Level\",\n        type: \"quick-reference\",\n        description:\n          \"Quick reference sheet for all major physics laws and formulas\",\n        author: \"Dr. Michael Brown\",\n        uploadDate: \"2024-01-08\",\n        downloads: 312,\n        rating: 4.9,\n        tags: [\"formulas\", \"laws\", \"equations\", \"reference\"],\n        fileSize: \"1.2 MB\",\n        fileType: \"PDF\",\n      },\n      {\n        id: 4,\n        title: \"Biology Study Guide - Cell Biology\",\n        subject: \"Biology\",\n        level: \"100 Level\",\n        type: \"study-guide\",\n        description:\n          \"Detailed study guide covering cell structure, function, and processes\",\n        author: \"Dr. Emily Davis\",\n        uploadDate: \"2024-01-05\",\n        downloads: 156,\n        rating: 4.7,\n        tags: [\n          \"cell biology\",\n          \"study guide\",\n          \"cellular processes\",\n          \"structure\",\n        ],\n        fileSize: \"4.5 MB\",\n        fileType: \"PDF\",\n      },\n      {\n        id: 5,\n        title: \"Economics Principles Summary\",\n        subject: \"Economics\",\n        level: \"200 Level\",\n        type: \"notes\",\n        description:\n          \"Key economic principles and theories with practical examples\",\n        author: \"Prof. Robert Wilson\",\n        uploadDate: \"2024-01-03\",\n        downloads: 98,\n        rating: 4.4,\n        tags: [\"economics\", \"principles\", \"theories\", \"microeconomics\"],\n        fileSize: \"2.8 MB\",\n        fileType: \"PDF\",\n      },\n      {\n        id: 6,\n        title: \"Computer Science Algorithms\",\n        subject: \"Computer Science\",\n        level: \"300 Level\",\n        type: \"study-guide\",\n        description:\n          \"Algorithm design and analysis study guide with code examples\",\n        author: \"Dr. Lisa Chen\",\n        uploadDate: \"2024-01-01\",\n        downloads: 203,\n        rating: 4.8,\n        tags: [\n          \"algorithms\",\n          \"programming\",\n          \"data structures\",\n          \"computer science\",\n        ],\n        fileSize: \"5.2 MB\",\n        fileType: \"PDF\",\n      },\n    ];\n  };\n\n  // Debug log to help identify the issue\n  console.log(\n    \"Notes state:\",\n    notes,\n    \"Type:\",\n    typeof notes,\n    \"Is Array:\",\n    Array.isArray(notes)\n  );\n\n  const filteredNotes = Array.isArray(notes)\n    ? notes.filter((note) => {\n        const matchesSearch =\n          !searchQuery ||\n          note.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          note.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          (note.tags &&\n            note.tags.some((tag) =>\n              tag.toLowerCase().includes(searchQuery.toLowerCase())\n            ));\n        const matchesSubject =\n          !selectedSubject || note.subject === selectedSubject;\n        const matchesLevel = !selectedLevel || note.level === selectedLevel;\n        const matchesType = note.type === activeTab;\n\n        return matchesSearch && matchesSubject && matchesLevel && matchesType;\n      })\n    : [];\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    if (!uploadData.file) {\n      setError(\"Please select a file to upload\");\n      return;\n    }\n\n    try {\n      setUploading(true);\n      setError(\"\");\n\n      const formData = new FormData();\n      formData.append(\"title\", uploadData.title);\n      formData.append(\"subject\", uploadData.subject);\n      formData.append(\"level\", uploadData.level);\n      formData.append(\"type\", uploadData.type);\n      formData.append(\"description\", uploadData.description);\n      formData.append(\"file\", uploadData.file);\n\n      const response = await apiClient.uploadCourseSummary(formData);\n\n      if (response.success) {\n        setSuccessMessage(\"File uploaded successfully!\");\n        setShowUploadModal(false);\n        setUploadData({\n          title: \"\",\n          subject: \"\",\n          level: \"\",\n          type: \"notes\",\n          description: \"\",\n          file: null,\n        });\n        // Reload the course summaries\n        loadCourseSummaries();\n        setTimeout(() => setSuccessMessage(\"\"), 5000);\n      } else {\n        setError(response.message || \"Failed to upload file\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n\n      // Check if it's a backend connection error\n      if (\n        error.message.includes(\"Server returned HTML instead of JSON\") ||\n        error.message.includes(\"Failed to fetch\")\n      ) {\n        setError(\n          \"Backend server is not running. Upload functionality will be available once the backend is set up.\"\n        );\n      } else {\n        setError(\"Failed to upload file. Please try again.\");\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleFileChange = (e) => {\n    setUploadData((prev) => ({\n      ...prev,\n      file: e.target.files[0],\n    }));\n  };\n\n  const handleDownload = async (noteId) => {\n    try {\n      const response = await apiClient.downloadCourseSummary(noteId);\n      if (response.success) {\n        // Create a blob and download the file\n        const blob = new Blob([response.data]);\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = response.filename || \"course-summary.pdf\";\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        setError(\"Failed to download file\");\n      }\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n\n      // Check if it's a backend connection error\n      if (\n        error.message.includes(\"Server returned HTML instead of JSON\") ||\n        error.message.includes(\"Failed to fetch\")\n      ) {\n        setError(\n          \"Backend server is not running. Download functionality will be available once the backend is set up.\"\n        );\n      } else {\n        setError(\"Failed to download file. Please try again.\");\n      }\n    }\n  };\n\n  const handleDelete = async (noteId) => {\n    if (\n      !window.confirm(\"Are you sure you want to delete this course summary?\")\n    ) {\n      return;\n    }\n\n    try {\n      const response = await apiClient.deleteCourseSummary(noteId);\n      if (response.success) {\n        setSuccessMessage(\"Course summary deleted successfully!\");\n        loadCourseSummaries();\n        setTimeout(() => setSuccessMessage(\"\"), 5000);\n      } else {\n        setError(\"Failed to delete course summary\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting course summary:\", error);\n\n      // Check if it's a backend connection error\n      if (\n        error.message.includes(\"Server returned HTML instead of JSON\") ||\n        error.message.includes(\"Failed to fetch\")\n      ) {\n        setError(\n          \"Backend server is not running. Delete functionality will be available once the backend is set up.\"\n        );\n      } else {\n        setError(\"Failed to delete course summary. Please try again.\");\n      }\n    }\n  };\n\n  const getTypeIcon = (type) => {\n    switch (type) {\n      case \"notes\":\n        return \"📝\";\n      case \"study-guide\":\n        return \"📚\";\n      case \"quick-reference\":\n        return \"⚡\";\n      default:\n        return \"📄\";\n    }\n  };\n\n  const getTypeColor = (type) => {\n    switch (type) {\n      case \"notes\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"study-guide\":\n        return \"bg-green-100 text-green-800\";\n      case \"quick-reference\":\n        return \"bg-yellow-100 text-yellow-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <Navbar\n        variant=\"dashboard\"\n        showNotifications={false}\n        notifications={[]}\n        unreadCount={0}\n        onNotificationClick={() => {}}\n        currentPath=\"/dashboard/course-summaries\"\n      />\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-8\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                Course Summaries & Notes\n              </h1>\n              <p className=\"text-gray-600\">\n                Access comprehensive study materials and course summaries\n              </p>\n            </div>\n            <button\n              onClick={() => setShowUploadModal(true)}\n              style={{ backgroundColor: \"#488bbf\" }}\n              className=\"mt-4 sm:mt-0 text-white px-6 py-3 rounded-lg font-semibold hover:opacity-90 transition-opacity\"\n            >\n              Upload Notes\n            </button>\n          </div>\n        </div>\n\n        {/* Success Message */}\n        {successMessage && (\n          <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6\">\n            {successMessage}\n          </div>\n        )}\n\n        {/* Error Message */}\n        {error && (\n          <div\n            className={`px-4 py-3 rounded mb-6 ${\n              error.includes(\"Backend server is not running\")\n                ? \"bg-yellow-100 border border-yellow-400 text-yellow-800\"\n                : \"bg-red-100 border border-red-400 text-red-700\"\n            }`}\n          >\n            <div className=\"flex items-center\">\n              <div className=\"shrink-0\">\n                {error.includes(\"Backend server is not running\") ? (\n                  <svg\n                    className=\"h-5 w-5 text-yellow-400\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                ) : (\n                  <svg\n                    className=\"h-5 w-5 text-red-400\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                )}\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium\">\n                  {error.includes(\"Backend server is not running\")\n                    ? \"Development Mode\"\n                    : \"Error\"}\n                </p>\n                <p className=\"text-sm mt-1\">{error}</p>\n                {error.includes(\"Backend server is not running\") && (\n                  <p className=\"text-xs mt-2 text-yellow-700\">\n                    The page is currently showing sample data. To enable full\n                    functionality, please set up the backend server with the\n                    course-summaries API endpoints.\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Tabs */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-8\">\n          <div className=\"flex flex-wrap gap-2\">\n            {[\n              { id: \"notes\", label: \"Subject Notes\", icon: \"📝\" },\n              { id: \"study-guide\", label: \"Study Guides\", icon: \"📚\" },\n              { id: \"quick-reference\", label: \"Quick References\", icon: \"⚡\" },\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center space-x-2 px-6 py-3 rounded-lg font-semibold transition-colors ${\n                  activeTab === tab.id\n                    ? \"bg-blue-100 text-blue-700 border-2 border-blue-200\"\n                    : \"text-gray-600 hover:bg-gray-100\"\n                }`}\n              >\n                <span>{tab.icon}</span>\n                <span>{tab.label}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Search and Filters */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Search Notes\n              </label>\n              <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder:text-gray-600 placeholder:font-medium text-gray-900 font-medium bg-white\"\n                placeholder=\"Search by title, description, or tags...\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Subject\n              </label>\n              <select\n                value={selectedSubject}\n                onChange={(e) => setSelectedSubject(e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n              >\n                <option value=\"\">All Subjects</option>\n                {subjects.map((subject) => (\n                  <option key={subject} value={subject}>\n                    {subject}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Level\n              </label>\n              <select\n                value={selectedLevel}\n                onChange={(e) => setSelectedLevel(e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n              >\n                <option value=\"\">All Levels</option>\n                {levels.map((level) => (\n                  <option key={level} value={level}>\n                    {level}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Results */}\n        <div className=\"space-y-6\">\n          {loading ? (\n            <div className=\"bg-white rounded-2xl shadow-lg p-8 text-center\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#488bbf] mx-auto mb-4\"></div>\n              <p className=\"text-gray-600\">Loading course summaries...</p>\n            </div>\n          ) : Array.isArray(filteredNotes) && filteredNotes.length > 0 ? (\n            filteredNotes.map((note) => (\n              <div\n                key={note.id}\n                className=\"bg-white rounded-2xl shadow-lg p-6 hover:shadow-xl transition-shadow\"\n              >\n                <div className=\"flex flex-col lg:flex-row lg:items-start lg:justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"text-3xl\">{getTypeIcon(note.type)}</div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-3 mb-2\">\n                          <h3 className=\"text-xl font-bold text-gray-900\">\n                            {note.title}\n                          </h3>\n                          <span\n                            className={`px-3 py-1 rounded-full text-sm font-semibold ${getTypeColor(\n                              note.type\n                            )}`}\n                          >\n                            {note.type.replace(\"-\", \" \").toUpperCase()}\n                          </span>\n                        </div>\n                        <p className=\"text-gray-600 mb-3\">{note.description}</p>\n                        <div className=\"flex flex-wrap items-center gap-4 text-sm text-gray-500 mb-4\">\n                          <span className=\"flex items-center space-x-1\">\n                            <span>👤</span>\n                            <span>{note.author}</span>\n                          </span>\n                          <span className=\"flex items-center space-x-1\">\n                            <span>📅</span>\n                            <span>\n                              {new Date(note.uploadDate).toLocaleDateString()}\n                            </span>\n                          </span>\n                          <span className=\"flex items-center space-x-1\">\n                            <span>📥</span>\n                            <span>{note.downloads} downloads</span>\n                          </span>\n                          <span className=\"flex items-center space-x-1\">\n                            <span>⭐</span>\n                            <span>{note.rating}/5.0</span>\n                          </span>\n                          <span className=\"flex items-center space-x-1\">\n                            <span>📄</span>\n                            <span>\n                              {note.fileSize} • {note.fileType}\n                            </span>\n                          </span>\n                        </div>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {note.tags.map((tag, index) => (\n                            <span\n                              key={index}\n                              className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full\"\n                            >\n                              #{tag}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mt-4 lg:mt-0 lg:ml-6 flex flex-col space-y-2\">\n                    <button\n                      onClick={() => handleDownload(note.id)}\n                      className=\"px-6 py-3 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors\"\n                    >\n                      Download\n                    </button>\n                    <button className=\"px-6 py-3 border border-gray-300 text-gray-700 rounded-lg font-semibold hover:bg-gray-50 transition-colors\">\n                      Preview\n                    </button>\n                    <button className=\"px-6 py-3 border border-gray-300 text-gray-700 rounded-lg font-semibold hover:bg-gray-50 transition-colors\">\n                      Share\n                    </button>\n                    {note.author === user?.email && (\n                      <button\n                        onClick={() => handleDelete(note.id)}\n                        className=\"px-6 py-3 border border-red-300 text-red-700 rounded-lg font-semibold hover:bg-red-50 transition-colors\"\n                      >\n                        Delete\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"bg-white rounded-2xl shadow-lg p-8 text-center\">\n              <div className=\"text-gray-400 mb-4\">\n                <svg\n                  className=\"w-16 h-16 mx-auto\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                  />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                No {activeTab.replace(\"-\", \" \")} found\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                Try adjusting your search criteria or upload some notes\n              </p>\n              <button\n                onClick={() => setShowUploadModal(true)}\n                style={{ backgroundColor: \"#488bbf\" }}\n                className=\"text-white px-6 py-3 rounded-lg font-semibold hover:opacity-90 transition-opacity\"\n              >\n                Upload Notes\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Upload Modal */}\n        {showUploadModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-white rounded-2xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-2xl font-bold text-gray-900\">\n                    Upload Study Material\n                  </h3>\n                  <button\n                    onClick={() => setShowUploadModal(false)}\n                    className=\"text-gray-400 hover:text-gray-600\"\n                  >\n                    <svg\n                      className=\"w-6 h-6\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M6 18L18 6M6 6l12 12\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n\n                <form onSubmit={handleUpload} className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                      Title\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={uploadData.title}\n                      onChange={(e) =>\n                        setUploadData((prev) => ({\n                          ...prev,\n                          title: e.target.value,\n                        }))\n                      }\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder:text-gray-600 placeholder:font-medium text-gray-900 font-medium bg-white\"\n                      placeholder=\"Enter title of your study material\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                        Subject\n                      </label>\n                      <select\n                        value={uploadData.subject}\n                        onChange={(e) =>\n                          setUploadData((prev) => ({\n                            ...prev,\n                            subject: e.target.value,\n                          }))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n                        required\n                      >\n                        <option value=\"\">Select Subject</option>\n                        {subjects.map((subject) => (\n                          <option key={subject} value={subject}>\n                            {subject}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                        Level\n                      </label>\n                      <select\n                        value={uploadData.level}\n                        onChange={(e) =>\n                          setUploadData((prev) => ({\n                            ...prev,\n                            level: e.target.value,\n                          }))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n                        required\n                      >\n                        <option value=\"\">Select Level</option>\n                        {levels.map((level) => (\n                          <option key={level} value={level}>\n                            {level}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                      Type\n                    </label>\n                    <select\n                      value={uploadData.type}\n                      onChange={(e) =>\n                        setUploadData((prev) => ({\n                          ...prev,\n                          type: e.target.value,\n                        }))\n                      }\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n                      required\n                    >\n                      <option value=\"notes\">Subject Notes</option>\n                      <option value=\"study-guide\">Study Guide</option>\n                      <option value=\"quick-reference\">Quick Reference</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                      Description\n                    </label>\n                    <textarea\n                      value={uploadData.description}\n                      onChange={(e) =>\n                        setUploadData((prev) => ({\n                          ...prev,\n                          description: e.target.value,\n                        }))\n                      }\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent placeholder:text-gray-600 placeholder:font-medium text-gray-900 font-medium bg-white\"\n                      placeholder=\"Describe your study material...\"\n                      rows={3}\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                      File\n                    </label>\n                    <input\n                      type=\"file\"\n                      onChange={handleFileChange}\n                      accept=\".pdf,.doc,.docx,.txt\"\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#488bbf] focus:border-transparent text-gray-900 font-medium bg-white\"\n                      required\n                    />\n                    <p className=\"text-sm text-gray-500 mt-1\">\n                      Supported formats: PDF, DOC, DOCX, TXT (Max 10MB)\n                    </p>\n                  </div>\n\n                  <div className=\"flex space-x-4 pt-4\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setShowUploadModal(false);\n                        setError(\"\");\n                      }}\n                      className=\"flex-1 bg-gray-200 text-gray-800 px-6 py-3 rounded-lg font-semibold hover:bg-gray-300 transition-colors\"\n                      disabled={uploading}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      style={{ backgroundColor: \"#488bbf\" }}\n                      className=\"flex-1 text-white px-6 py-3 rounded-lg font-semibold hover:opacity-90 transition-opacity disabled:opacity-50\"\n                      disabled={uploading}\n                    >\n                      {uploading ? \"Uploading...\" : \"Upload Material\"}\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default function ProtectedCourseSummariesPage() {\n  return (\n    <AuthGuard requireAuth={true}>\n      <CourseSummariesPage />\n    </AuthGuard>\n  );\n}\n"],"names":[],"mappings":"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"}